/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2021-03-03 10:02:54 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class WebSocketChat_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <title>ChatRoom</title>\r\n");
      out.write("    <script src=\"https://cdn.bootcss.com/jquery/3.4.1/jquery.js\"></script>\r\n");
      out.write("    <script>\r\n");
      out.write("        var ws = null;\r\n");
      out.write("        var ws_url = \"ws://localhost:8080/WebSocket/chatRoom\";\r\n");
      out.write("\r\n");
      out.write("        $(function (){\r\n");
      out.write("            wsConnect();\r\n");
      out.write("\r\n");
      out.write("        })\r\n");
      out.write("\r\n");
      out.write("        function wsConnect(){\r\n");
      out.write("            if('WebSocket' in window){\r\n");
      out.write("                //连接成功，回调函数生成一个ws对象\r\n");
      out.write("                ws = new WebSocket(ws_url);\r\n");
      out.write("            }else if('MozWebSocket' in window){\r\n");
      out.write("                ws = new MozWebSocket(ws_url);\r\n");
      out.write("            }else {\r\n");
      out.write("                console.log('Error: WebSocket is not supported by this browser.');\r\n");
      out.write("                return;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            //都是回调函数\r\n");
      out.write("            ws.onopen = function (){\r\n");
      out.write("                console.log('Info: WebSocket connection opened.');\r\n");
      out.write("            };\r\n");
      out.write("            ws.onclose = function () {\r\n");
      out.write("                console.log('Info: WebSocket closed.');\r\n");
      out.write("            };\r\n");
      out.write("\r\n");
      out.write("            ws.onmessage = function (message) {  // message是从后台传过来的\r\n");
      out.write("                console.log(message.data);\r\n");
      out.write("                $(\"#chat_content\").append(\"<p>\"+message.data+\"</p>\");\r\n");
      out.write("            };\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        function sendMessage(){\r\n");
      out.write("            var sendMsg = $(\"#msg\").val();\r\n");
      out.write("            ws.send(sendMsg);\r\n");
      out.write("            $(\"#msg\").val(\"\");\r\n");
      out.write("        }\r\n");
      out.write("    </script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<div style=\"width: 610px;border: 1px solid #000\">\r\n");
      out.write("    <h1 align=\"center\">WelCome to chatroom</h1>\r\n");
      out.write("    <div id=\"chat_content\" style=\"margin: 2px; width: 600px; height: 400px;border:1px solid #000;\"></div>\r\n");
      out.write("\r\n");
      out.write("    <input id=\"msg\" placeholder=\"输入消息...\" style=\"margin: 2px; width: 300px;\">\r\n");
      out.write("    <button id=\"send\">发送消息</button>\r\n");
      out.write("</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
